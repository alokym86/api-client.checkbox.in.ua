/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
// import org.threeten.bp.OffsetDateTime;
/**
 * CurrencyRatePayload
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class CurrencyRatePayload {
  @SerializedName("code")
  private String code = null;

  @SerializedName("symbol_code")
  private String symbolCode = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("sell")
  private BigDecimal sell = null;

  @SerializedName("buy")
  private BigDecimal buy = null;

  @SerializedName("regulator")
  private BigDecimal regulator = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  public CurrencyRatePayload code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(required = true, description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public CurrencyRatePayload symbolCode(String symbolCode) {
    this.symbolCode = symbolCode;
    return this;
  }

   /**
   * Get symbolCode
   * @return symbolCode
  **/
  @Schema(description = "")
  public String getSymbolCode() {
    return symbolCode;
  }

  public void setSymbolCode(String symbolCode) {
    this.symbolCode = symbolCode;
  }

  public CurrencyRatePayload name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CurrencyRatePayload sell(BigDecimal sell) {
    this.sell = sell;
    return this;
  }

   /**
   * Get sell
   * @return sell
  **/
  @Schema(required = true, description = "")
  public BigDecimal getSell() {
    return sell;
  }

  public void setSell(BigDecimal sell) {
    this.sell = sell;
  }

  public CurrencyRatePayload buy(BigDecimal buy) {
    this.buy = buy;
    return this;
  }

   /**
   * Get buy
   * @return buy
  **/
  @Schema(required = true, description = "")
  public BigDecimal getBuy() {
    return buy;
  }

  public void setBuy(BigDecimal buy) {
    this.buy = buy;
  }

  public CurrencyRatePayload regulator(BigDecimal regulator) {
    this.regulator = regulator;
    return this;
  }

   /**
   * Get regulator
   * @return regulator
  **/
  @Schema(required = true, description = "")
  public BigDecimal getRegulator() {
    return regulator;
  }

  public void setRegulator(BigDecimal regulator) {
    this.regulator = regulator;
  }

  public CurrencyRatePayload createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyRatePayload currencyRatePayload = (CurrencyRatePayload) o;
    return Objects.equals(this.code, currencyRatePayload.code) &&
        Objects.equals(this.symbolCode, currencyRatePayload.symbolCode) &&
        Objects.equals(this.name, currencyRatePayload.name) &&
        Objects.equals(this.sell, currencyRatePayload.sell) &&
        Objects.equals(this.buy, currencyRatePayload.buy) &&
        Objects.equals(this.regulator, currencyRatePayload.regulator) &&
        Objects.equals(this.createdAt, currencyRatePayload.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, symbolCode, name, sell, buy, regulator, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyRatePayload {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    symbolCode: ").append(toIndentedString(symbolCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sell: ").append(toIndentedString(sell)).append("\n");
    sb.append("    buy: ").append(toIndentedString(buy)).append("\n");
    sb.append("    regulator: ").append(toIndentedString(regulator)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
