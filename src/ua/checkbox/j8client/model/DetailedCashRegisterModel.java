/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
import ua.checkbox.j8client.model.BranchModel;
import ua.checkbox.j8client.model.ShiftWithCashierModel;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;
// import org.threeten.bp.OffsetDateTime;
/**
 * DetailedCashRegisterModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class DetailedCashRegisterModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("fiscal_number")
  private String fiscalNumber = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("shift")
  private ShiftWithCashierModel shift = null;

  @SerializedName("offline_mode")
  private Boolean offlineMode = false;

  @SerializedName("stay_offline")
  private Boolean stayOffline = false;

  @SerializedName("branch")
  private BranchModel branch = null;

  @SerializedName("address")
  private String address = null;

  public DetailedCashRegisterModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public DetailedCashRegisterModel fiscalNumber(String fiscalNumber) {
    this.fiscalNumber = fiscalNumber;
    return this;
  }

   /**
   * Get fiscalNumber
   * @return fiscalNumber
  **/
  @Schema(required = true, description = "")
  public String getFiscalNumber() {
    return fiscalNumber;
  }

  public void setFiscalNumber(String fiscalNumber) {
    this.fiscalNumber = fiscalNumber;
  }

  public DetailedCashRegisterModel active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(required = true, description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public DetailedCashRegisterModel createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public DetailedCashRegisterModel updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public DetailedCashRegisterModel shift(ShiftWithCashierModel shift) {
    this.shift = shift;
    return this;
  }

   /**
   * Get shift
   * @return shift
  **/
  @Schema(description = "")
  public ShiftWithCashierModel getShift() {
    return shift;
  }

  public void setShift(ShiftWithCashierModel shift) {
    this.shift = shift;
  }

  public DetailedCashRegisterModel offlineMode(Boolean offlineMode) {
    this.offlineMode = offlineMode;
    return this;
  }

   /**
   * Get offlineMode
   * @return offlineMode
  **/
  @Schema(description = "")
  public Boolean isOfflineMode() {
    return offlineMode;
  }

  public void setOfflineMode(Boolean offlineMode) {
    this.offlineMode = offlineMode;
  }

  public DetailedCashRegisterModel stayOffline(Boolean stayOffline) {
    this.stayOffline = stayOffline;
    return this;
  }

   /**
   * Get stayOffline
   * @return stayOffline
  **/
  @Schema(description = "")
  public Boolean isStayOffline() {
    return stayOffline;
  }

  public void setStayOffline(Boolean stayOffline) {
    this.stayOffline = stayOffline;
  }

  public DetailedCashRegisterModel branch(BranchModel branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @Schema(description = "")
  public BranchModel getBranch() {
    return branch;
  }

  public void setBranch(BranchModel branch) {
    this.branch = branch;
  }

  public DetailedCashRegisterModel address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedCashRegisterModel detailedCashRegisterModel = (DetailedCashRegisterModel) o;
    return Objects.equals(this.id, detailedCashRegisterModel.id) &&
        Objects.equals(this.fiscalNumber, detailedCashRegisterModel.fiscalNumber) &&
        Objects.equals(this.active, detailedCashRegisterModel.active) &&
        Objects.equals(this.createdAt, detailedCashRegisterModel.createdAt) &&
        Objects.equals(this.updatedAt, detailedCashRegisterModel.updatedAt) &&
        Objects.equals(this.shift, detailedCashRegisterModel.shift) &&
        Objects.equals(this.offlineMode, detailedCashRegisterModel.offlineMode) &&
        Objects.equals(this.stayOffline, detailedCashRegisterModel.stayOffline) &&
        Objects.equals(this.branch, detailedCashRegisterModel.branch) &&
        Objects.equals(this.address, detailedCashRegisterModel.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fiscalNumber, active, createdAt, updatedAt, shift, offlineMode, stayOffline, branch, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedCashRegisterModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fiscalNumber: ").append(toIndentedString(fiscalNumber)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    shift: ").append(toIndentedString(shift)).append("\n");
    sb.append("    offlineMode: ").append(toIndentedString(offlineMode)).append("\n");
    sb.append("    stayOffline: ").append(toIndentedString(stayOffline)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
