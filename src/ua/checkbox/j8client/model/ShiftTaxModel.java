/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;
// import org.threeten.bp.OffsetDateTime;
/**
 * ShiftTaxModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class ShiftTaxModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("code")
  private Integer code = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("rate")
  private Integer rate = null;

  @SerializedName("extra_rate")
  private Integer extraRate = null;

  @SerializedName("included")
  private Boolean included = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("sales")
  private Integer sales = null;

  @SerializedName("returns")
  private Integer returns = null;

  @SerializedName("sales_turnover")
  private Integer salesTurnover = null;

  @SerializedName("returns_turnover")
  private Integer returnsTurnover = null;

  public ShiftTaxModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ShiftTaxModel code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(required = true, description = "")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public ShiftTaxModel label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(required = true, description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public ShiftTaxModel symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(required = true, description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public ShiftTaxModel rate(Integer rate) {
    this.rate = rate;
    return this;
  }

   /**
   * Get rate
   * @return rate
  **/
  @Schema(required = true, description = "")
  public Integer getRate() {
    return rate;
  }

  public void setRate(Integer rate) {
    this.rate = rate;
  }

  public ShiftTaxModel extraRate(Integer extraRate) {
    this.extraRate = extraRate;
    return this;
  }

   /**
   * Get extraRate
   * @return extraRate
  **/
  @Schema(description = "")
  public Integer getExtraRate() {
    return extraRate;
  }

  public void setExtraRate(Integer extraRate) {
    this.extraRate = extraRate;
  }

  public ShiftTaxModel included(Boolean included) {
    this.included = included;
    return this;
  }

   /**
   * Get included
   * @return included
  **/
  @Schema(required = true, description = "")
  public Boolean isIncluded() {
    return included;
  }

  public void setIncluded(Boolean included) {
    this.included = included;
  }

  public ShiftTaxModel createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ShiftTaxModel updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ShiftTaxModel sales(Integer sales) {
    this.sales = sales;
    return this;
  }

   /**
   * Get sales
   * @return sales
  **/
  @Schema(required = true, description = "")
  public Integer getSales() {
    return sales;
  }

  public void setSales(Integer sales) {
    this.sales = sales;
  }

  public ShiftTaxModel returns(Integer returns) {
    this.returns = returns;
    return this;
  }

   /**
   * Get returns
   * @return returns
  **/
  @Schema(required = true, description = "")
  public Integer getReturns() {
    return returns;
  }

  public void setReturns(Integer returns) {
    this.returns = returns;
  }

  public ShiftTaxModel salesTurnover(Integer salesTurnover) {
    this.salesTurnover = salesTurnover;
    return this;
  }

   /**
   * Get salesTurnover
   * @return salesTurnover
  **/
  @Schema(required = true, description = "")
  public Integer getSalesTurnover() {
    return salesTurnover;
  }

  public void setSalesTurnover(Integer salesTurnover) {
    this.salesTurnover = salesTurnover;
  }

  public ShiftTaxModel returnsTurnover(Integer returnsTurnover) {
    this.returnsTurnover = returnsTurnover;
    return this;
  }

   /**
   * Get returnsTurnover
   * @return returnsTurnover
  **/
  @Schema(required = true, description = "")
  public Integer getReturnsTurnover() {
    return returnsTurnover;
  }

  public void setReturnsTurnover(Integer returnsTurnover) {
    this.returnsTurnover = returnsTurnover;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShiftTaxModel shiftTaxModel = (ShiftTaxModel) o;
    return Objects.equals(this.id, shiftTaxModel.id) &&
        Objects.equals(this.code, shiftTaxModel.code) &&
        Objects.equals(this.label, shiftTaxModel.label) &&
        Objects.equals(this.symbol, shiftTaxModel.symbol) &&
        Objects.equals(this.rate, shiftTaxModel.rate) &&
        Objects.equals(this.extraRate, shiftTaxModel.extraRate) &&
        Objects.equals(this.included, shiftTaxModel.included) &&
        Objects.equals(this.createdAt, shiftTaxModel.createdAt) &&
        Objects.equals(this.updatedAt, shiftTaxModel.updatedAt) &&
        Objects.equals(this.sales, shiftTaxModel.sales) &&
        Objects.equals(this.returns, shiftTaxModel.returns) &&
        Objects.equals(this.salesTurnover, shiftTaxModel.salesTurnover) &&
        Objects.equals(this.returnsTurnover, shiftTaxModel.returnsTurnover);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, label, symbol, rate, extraRate, included, createdAt, updatedAt, sales, returns, salesTurnover, returnsTurnover);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShiftTaxModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    extraRate: ").append(toIndentedString(extraRate)).append("\n");
    sb.append("    included: ").append(toIndentedString(included)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    returns: ").append(toIndentedString(returns)).append("\n");
    sb.append("    salesTurnover: ").append(toIndentedString(salesTurnover)).append("\n");
    sb.append("    returnsTurnover: ").append(toIndentedString(returnsTurnover)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
