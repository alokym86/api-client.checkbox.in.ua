/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
import ua.checkbox.j8client.model.CurrencyExchangeType;
import ua.checkbox.j8client.model.CurrencySchema;

import java.io.IOException;
import java.math.BigDecimal;
/**
 * CurrencyExchangeSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class CurrencyExchangeSchema {
  @SerializedName("sell")
  private CurrencySchema sell = null;

  @SerializedName("buy")
  private CurrencySchema buy = null;

  @SerializedName("type")
  private CurrencyExchangeType type = null;

  @SerializedName("reversal")
  private Boolean reversal = false;

  @SerializedName("client_info")
  private String clientInfo = null;

  @SerializedName("commission")
  private BigDecimal commission = null;

  @SerializedName("cross")
  private BigDecimal cross = null;

  public CurrencyExchangeSchema sell(CurrencySchema sell) {
    this.sell = sell;
    return this;
  }

   /**
   * Get sell
   * @return sell
  **/
  @Schema(description = "")
  public CurrencySchema getSell() {
    return sell;
  }

  public void setSell(CurrencySchema sell) {
    this.sell = sell;
  }

  public CurrencyExchangeSchema buy(CurrencySchema buy) {
    this.buy = buy;
    return this;
  }

   /**
   * Get buy
   * @return buy
  **/
  @Schema(description = "")
  public CurrencySchema getBuy() {
    return buy;
  }

  public void setBuy(CurrencySchema buy) {
    this.buy = buy;
  }

  public CurrencyExchangeSchema type(CurrencyExchangeType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public CurrencyExchangeType getType() {
    return type;
  }

  public void setType(CurrencyExchangeType type) {
    this.type = type;
  }

  public CurrencyExchangeSchema reversal(Boolean reversal) {
    this.reversal = reversal;
    return this;
  }

   /**
   * Get reversal
   * @return reversal
  **/
  @Schema(description = "")
  public Boolean isReversal() {
    return reversal;
  }

  public void setReversal(Boolean reversal) {
    this.reversal = reversal;
  }

  public CurrencyExchangeSchema clientInfo(String clientInfo) {
    this.clientInfo = clientInfo;
    return this;
  }

   /**
   * Get clientInfo
   * @return clientInfo
  **/
  @Schema(description = "")
  public String getClientInfo() {
    return clientInfo;
  }

  public void setClientInfo(String clientInfo) {
    this.clientInfo = clientInfo;
  }

  public CurrencyExchangeSchema commission(BigDecimal commission) {
    this.commission = commission;
    return this;
  }

   /**
   * Get commission
   * @return commission
  **/
  @Schema(description = "")
  public BigDecimal getCommission() {
    return commission;
  }

  public void setCommission(BigDecimal commission) {
    this.commission = commission;
  }

  public CurrencyExchangeSchema cross(BigDecimal cross) {
    this.cross = cross;
    return this;
  }

   /**
   * Get cross
   * @return cross
  **/
  @Schema(description = "")
  public BigDecimal getCross() {
    return cross;
  }

  public void setCross(BigDecimal cross) {
    this.cross = cross;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyExchangeSchema currencyExchangeSchema = (CurrencyExchangeSchema) o;
    return Objects.equals(this.sell, currencyExchangeSchema.sell) &&
        Objects.equals(this.buy, currencyExchangeSchema.buy) &&
        Objects.equals(this.type, currencyExchangeSchema.type) &&
        Objects.equals(this.reversal, currencyExchangeSchema.reversal) &&
        Objects.equals(this.clientInfo, currencyExchangeSchema.clientInfo) &&
        Objects.equals(this.commission, currencyExchangeSchema.commission) &&
        Objects.equals(this.cross, currencyExchangeSchema.cross);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sell, buy, type, reversal, clientInfo, commission, cross);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyExchangeSchema {\n");
    
    sb.append("    sell: ").append(toIndentedString(sell)).append("\n");
    sb.append("    buy: ").append(toIndentedString(buy)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    reversal: ").append(toIndentedString(reversal)).append("\n");
    sb.append("    clientInfo: ").append(toIndentedString(clientInfo)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    cross: ").append(toIndentedString(cross)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
