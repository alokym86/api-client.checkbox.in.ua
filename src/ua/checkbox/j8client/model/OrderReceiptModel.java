/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
import ua.checkbox.j8client.model.DeliveryPayload;
import ua.checkbox.j8client.model.DiscountPayload;
import ua.checkbox.j8client.model.OrderGoodItemModel;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * OrderReceiptModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class OrderReceiptModel {
  @SerializedName("cashier_name")
  private String cashierName = null;

  @SerializedName("departament")
  private String departament = null;

  @SerializedName("goods")
  private List<OrderGoodItemModel> goods = new ArrayList<OrderGoodItemModel>();

  @SerializedName("discounts")
  private List<DiscountPayload> discounts = null;

  @SerializedName("payments")
  private List<AnyOfOrderReceiptModelPaymentsItems> payments = null;

  @SerializedName("header")
  private String header = null;

  @SerializedName("footer")
  private String footer = null;

  @SerializedName("barcode")
  private String barcode = null;

  @SerializedName("delivery")
  private DeliveryPayload delivery = null;

  public OrderReceiptModel cashierName(String cashierName) {
    this.cashierName = cashierName;
    return this;
  }

   /**
   * Get cashierName
   * @return cashierName
  **/
  @Schema(description = "")
  public String getCashierName() {
    return cashierName;
  }

  public void setCashierName(String cashierName) {
    this.cashierName = cashierName;
  }

  public OrderReceiptModel departament(String departament) {
    this.departament = departament;
    return this;
  }

   /**
   * Get departament
   * @return departament
  **/
  @Schema(description = "")
  public String getDepartament() {
    return departament;
  }

  public void setDepartament(String departament) {
    this.departament = departament;
  }

  public OrderReceiptModel goods(List<OrderGoodItemModel> goods) {
    this.goods = goods;
    return this;
  }

  public OrderReceiptModel addGoodsItem(OrderGoodItemModel goodsItem) {
    this.goods.add(goodsItem);
    return this;
  }

   /**
   * Get goods
   * @return goods
  **/
  @Schema(required = true, description = "")
  public List<OrderGoodItemModel> getGoods() {
    return goods;
  }

  public void setGoods(List<OrderGoodItemModel> goods) {
    this.goods = goods;
  }

  public OrderReceiptModel discounts(List<DiscountPayload> discounts) {
    this.discounts = discounts;
    return this;
  }

  public OrderReceiptModel addDiscountsItem(DiscountPayload discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<DiscountPayload>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

   /**
   * Get discounts
   * @return discounts
  **/
  @Schema(description = "")
  public List<DiscountPayload> getDiscounts() {
    return discounts;
  }

  public void setDiscounts(List<DiscountPayload> discounts) {
    this.discounts = discounts;
  }

  public OrderReceiptModel payments(List<AnyOfOrderReceiptModelPaymentsItems> payments) {
    this.payments = payments;
    return this;
  }

  public OrderReceiptModel addPaymentsItem(AnyOfOrderReceiptModelPaymentsItems paymentsItem) {
    if (this.payments == null) {
      this.payments = new ArrayList<AnyOfOrderReceiptModelPaymentsItems>();
    }
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Get payments
   * @return payments
  **/
  @Schema(description = "")
  public List<AnyOfOrderReceiptModelPaymentsItems> getPayments() {
    return payments;
  }

  public void setPayments(List<AnyOfOrderReceiptModelPaymentsItems> payments) {
    this.payments = payments;
  }

  public OrderReceiptModel header(String header) {
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @Schema(description = "")
  public String getHeader() {
    return header;
  }

  public void setHeader(String header) {
    this.header = header;
  }

  public OrderReceiptModel footer(String footer) {
    this.footer = footer;
    return this;
  }

   /**
   * Get footer
   * @return footer
  **/
  @Schema(description = "")
  public String getFooter() {
    return footer;
  }

  public void setFooter(String footer) {
    this.footer = footer;
  }

  public OrderReceiptModel barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

   /**
   * Get barcode
   * @return barcode
  **/
  @Schema(description = "")
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }

  public OrderReceiptModel delivery(DeliveryPayload delivery) {
    this.delivery = delivery;
    return this;
  }

   /**
   * Get delivery
   * @return delivery
  **/
  @Schema(description = "")
  public DeliveryPayload getDelivery() {
    return delivery;
  }

  public void setDelivery(DeliveryPayload delivery) {
    this.delivery = delivery;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderReceiptModel orderReceiptModel = (OrderReceiptModel) o;
    return Objects.equals(this.cashierName, orderReceiptModel.cashierName) &&
        Objects.equals(this.departament, orderReceiptModel.departament) &&
        Objects.equals(this.goods, orderReceiptModel.goods) &&
        Objects.equals(this.discounts, orderReceiptModel.discounts) &&
        Objects.equals(this.payments, orderReceiptModel.payments) &&
        Objects.equals(this.header, orderReceiptModel.header) &&
        Objects.equals(this.footer, orderReceiptModel.footer) &&
        Objects.equals(this.barcode, orderReceiptModel.barcode) &&
        Objects.equals(this.delivery, orderReceiptModel.delivery);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cashierName, departament, goods, discounts, payments, header, footer, barcode, delivery);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderReceiptModel {\n");
    
    sb.append("    cashierName: ").append(toIndentedString(cashierName)).append("\n");
    sb.append("    departament: ").append(toIndentedString(departament)).append("\n");
    sb.append("    goods: ").append(toIndentedString(goods)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
