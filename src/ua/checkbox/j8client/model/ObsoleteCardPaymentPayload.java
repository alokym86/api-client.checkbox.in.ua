/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ObsoleteCardPaymentPayload
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class ObsoleteCardPaymentPayload implements AnyOfCalculatedReceiptSellPayloadPaymentsItems, AnyOfOfflineReceiptSellPayloadPaymentsItems, AnyOfOrderReceiptModelPaymentsItems, AnyOfReceiptModelPaymentsItems, AnyOfReceiptSellPayloadPaymentsItems, AnyOfReceiptServicePayloadPayment, AnyOfShortReceiptModelPaymentsItems {
  
	public ObsoleteCardPaymentPayload() {
		super();
	}

@SerializedName("type")
  private PaymentType type = null;

  @SerializedName("pawnshop_is_return")
  private Boolean pawnshopIsReturn = null;

  @SerializedName("code")
  private Integer code = null;

  @SerializedName("value")
  private Integer value = null;

  @SerializedName("label")
  private String label = "Картка";

  @SerializedName("card_mask")
  private String cardMask = null;

  @SerializedName("bank_name")
  private String bankName = null;

  @SerializedName("auth_code")
  private String authCode = null;

  @SerializedName("rrn")
  private String rrn = null;

  @SerializedName("payment_system")
  private String paymentSystem = null;

  @SerializedName("owner_name")
  private String ownerName = null;

  @SerializedName("terminal")
  private String terminal = null;

  @SerializedName("acquiring")
  private String acquiring = null;

  @SerializedName("acquirer_and_seller")
  private String acquirerAndSeller = null;

  @SerializedName("receipt_no")
  private String receiptNo = null;

  @SerializedName("signature_required")
  private Boolean signatureRequired = null;

  public ObsoleteCardPaymentPayload type(PaymentType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public PaymentType getType() {
    return type;
  }

  public void setType(PaymentType type) {
    this.type = type;
  }

  public ObsoleteCardPaymentPayload pawnshopIsReturn(Boolean pawnshopIsReturn) {
    this.pawnshopIsReturn = pawnshopIsReturn;
    return this;
  }

   /**
   * Get pawnshopIsReturn
   * @return pawnshopIsReturn
  **/
  @Schema(description = "")
  public Boolean isPawnshopIsReturn() {
    return pawnshopIsReturn;
  }

  public void setPawnshopIsReturn(Boolean pawnshopIsReturn) {
    this.pawnshopIsReturn = pawnshopIsReturn;
  }

  public ObsoleteCardPaymentPayload code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public ObsoleteCardPaymentPayload value(Integer value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(required = true, description = "")
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }

  public ObsoleteCardPaymentPayload label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public ObsoleteCardPaymentPayload cardMask(String cardMask) {
    this.cardMask = cardMask;
    return this;
  }

   /**
   * Get cardMask
   * @return cardMask
  **/
  @Schema(description = "")
  public String getCardMask() {
    return cardMask;
  }

  public void setCardMask(String cardMask) {
    this.cardMask = cardMask;
  }

  public ObsoleteCardPaymentPayload bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * Get bankName
   * @return bankName
  **/
  @Schema(description = "")
  public String getBankName() {
    return bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = bankName;
  }

  public ObsoleteCardPaymentPayload authCode(String authCode) {
    this.authCode = authCode;
    return this;
  }

   /**
   * Get authCode
   * @return authCode
  **/
  @Schema(description = "")
  public String getAuthCode() {
    return authCode;
  }

  public void setAuthCode(String authCode) {
    this.authCode = authCode;
  }

  public ObsoleteCardPaymentPayload rrn(String rrn) {
    this.rrn = rrn;
    return this;
  }

   /**
   * Get rrn
   * @return rrn
  **/
  @Schema(description = "")
  public String getRrn() {
    return rrn;
  }

  public void setRrn(String rrn) {
    this.rrn = rrn;
  }

  public ObsoleteCardPaymentPayload paymentSystem(String paymentSystem) {
    this.paymentSystem = paymentSystem;
    return this;
  }

   /**
   * Get paymentSystem
   * @return paymentSystem
  **/
  @Schema(description = "")
  public String getPaymentSystem() {
    return paymentSystem;
  }

  public void setPaymentSystem(String paymentSystem) {
    this.paymentSystem = paymentSystem;
  }

  public ObsoleteCardPaymentPayload ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

   /**
   * Get ownerName
   * @return ownerName
  **/
  @Schema(description = "")
  public String getOwnerName() {
    return ownerName;
  }

  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }

  public ObsoleteCardPaymentPayload terminal(String terminal) {
    this.terminal = terminal;
    return this;
  }

   /**
   * Get terminal
   * @return terminal
  **/
  @Schema(description = "")
  public String getTerminal() {
    return terminal;
  }

  public void setTerminal(String terminal) {
    this.terminal = terminal;
  }

  public ObsoleteCardPaymentPayload acquiring(String acquiring) {
    this.acquiring = acquiring;
    return this;
  }

   /**
   * Get acquiring
   * @return acquiring
  **/
  @Schema(description = "")
  public String getAcquiring() {
    return acquiring;
  }

  public void setAcquiring(String acquiring) {
    this.acquiring = acquiring;
  }

  public ObsoleteCardPaymentPayload acquirerAndSeller(String acquirerAndSeller) {
    this.acquirerAndSeller = acquirerAndSeller;
    return this;
  }

   /**
   * Get acquirerAndSeller
   * @return acquirerAndSeller
  **/
  @Schema(description = "")
  public String getAcquirerAndSeller() {
    return acquirerAndSeller;
  }

  public void setAcquirerAndSeller(String acquirerAndSeller) {
    this.acquirerAndSeller = acquirerAndSeller;
  }

  public ObsoleteCardPaymentPayload receiptNo(String receiptNo) {
    this.receiptNo = receiptNo;
    return this;
  }

   /**
   * Get receiptNo
   * @return receiptNo
  **/
  @Schema(description = "")
  public String getReceiptNo() {
    return receiptNo;
  }

  public void setReceiptNo(String receiptNo) {
    this.receiptNo = receiptNo;
  }

  public ObsoleteCardPaymentPayload signatureRequired(Boolean signatureRequired) {
    this.signatureRequired = signatureRequired;
    return this;
  }

   /**
   * Get signatureRequired
   * @return signatureRequired
  **/
  @Schema(description = "")
  public Boolean isSignatureRequired() {
    return signatureRequired;
  }

  public void setSignatureRequired(Boolean signatureRequired) {
    this.signatureRequired = signatureRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObsoleteCardPaymentPayload obsoleteCardPaymentPayload = (ObsoleteCardPaymentPayload) o;
    return Objects.equals(this.type, obsoleteCardPaymentPayload.type) &&
        Objects.equals(this.pawnshopIsReturn, obsoleteCardPaymentPayload.pawnshopIsReturn) &&
        Objects.equals(this.code, obsoleteCardPaymentPayload.code) &&
        Objects.equals(this.value, obsoleteCardPaymentPayload.value) &&
        Objects.equals(this.label, obsoleteCardPaymentPayload.label) &&
        Objects.equals(this.cardMask, obsoleteCardPaymentPayload.cardMask) &&
        Objects.equals(this.bankName, obsoleteCardPaymentPayload.bankName) &&
        Objects.equals(this.authCode, obsoleteCardPaymentPayload.authCode) &&
        Objects.equals(this.rrn, obsoleteCardPaymentPayload.rrn) &&
        Objects.equals(this.paymentSystem, obsoleteCardPaymentPayload.paymentSystem) &&
        Objects.equals(this.ownerName, obsoleteCardPaymentPayload.ownerName) &&
        Objects.equals(this.terminal, obsoleteCardPaymentPayload.terminal) &&
        Objects.equals(this.acquiring, obsoleteCardPaymentPayload.acquiring) &&
        Objects.equals(this.acquirerAndSeller, obsoleteCardPaymentPayload.acquirerAndSeller) &&
        Objects.equals(this.receiptNo, obsoleteCardPaymentPayload.receiptNo) &&
        Objects.equals(this.signatureRequired, obsoleteCardPaymentPayload.signatureRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, pawnshopIsReturn, code, value, label, cardMask, bankName, authCode, rrn, paymentSystem, ownerName, terminal, acquiring, acquirerAndSeller, receiptNo, signatureRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObsoleteCardPaymentPayload {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    pawnshopIsReturn: ").append(toIndentedString(pawnshopIsReturn)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    cardMask: ").append(toIndentedString(cardMask)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    authCode: ").append(toIndentedString(authCode)).append("\n");
    sb.append("    rrn: ").append(toIndentedString(rrn)).append("\n");
    sb.append("    paymentSystem: ").append(toIndentedString(paymentSystem)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    terminal: ").append(toIndentedString(terminal)).append("\n");
    sb.append("    acquiring: ").append(toIndentedString(acquiring)).append("\n");
    sb.append("    acquirerAndSeller: ").append(toIndentedString(acquirerAndSeller)).append("\n");
    sb.append("    receiptNo: ").append(toIndentedString(receiptNo)).append("\n");
    sb.append("    signatureRequired: ").append(toIndentedString(signatureRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
