/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
import ua.checkbox.j8client.model.CalculatedDiscountPayload;
import ua.checkbox.j8client.model.CalculatedGoodItemPayload;
import ua.checkbox.j8client.model.CalculatedReceiptTaxPayload;
import ua.checkbox.j8client.model.DeliveryPayload;

import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
// import org.threeten.bp.OffsetDateTime;
/**
 * CalculatedReceiptSellPayload
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class CalculatedReceiptSellPayload {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("fiscal_code")
  private String fiscalCode = null;

  @SerializedName("fiscal_date")
  private OffsetDateTime fiscalDate = null;

  @SerializedName("total_payment")
  private BigDecimal totalPayment = null;

  @SerializedName("total_sum")
  private BigDecimal totalSum = null;

  @SerializedName("round_sum")
  private BigDecimal roundSum = null;

  @SerializedName("total_rest")
  private BigDecimal totalRest = null;

  @SerializedName("technical_return")
  private Boolean technicalReturn = false;

  @SerializedName("goods")
  private List<CalculatedGoodItemPayload> goods = new ArrayList<CalculatedGoodItemPayload>();

  @SerializedName("payments")
  private List<AnyOfCalculatedReceiptSellPayloadPaymentsItems> payments = new ArrayList<AnyOfCalculatedReceiptSellPayloadPaymentsItems>();

  @SerializedName("is_sell")
  private Boolean isSell = true;

  @SerializedName("discounts")
  private List<CalculatedDiscountPayload> discounts = null;

  @SerializedName("taxes")
  private List<CalculatedReceiptTaxPayload> taxes = new ArrayList<CalculatedReceiptTaxPayload>();

  @SerializedName("delivery")
  private DeliveryPayload delivery = null;

  @SerializedName("cashier_name")
  private String cashierName = null;

  @SerializedName("departament")
  private String departament = null;

  @SerializedName("header")
  private String header = null;

  @SerializedName("footer")
  private String footer = null;

  @SerializedName("barcode")
  private String barcode = null;

  @SerializedName("context")
  private Map<String, Object> context = null;

  public CalculatedReceiptSellPayload id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public CalculatedReceiptSellPayload fiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
    return this;
  }

   /**
   * Get fiscalCode
   * @return fiscalCode
  **/
  @Schema(required = true, description = "")
  public String getFiscalCode() {
    return fiscalCode;
  }

  public void setFiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
  }

  public CalculatedReceiptSellPayload fiscalDate(OffsetDateTime fiscalDate) {
    this.fiscalDate = fiscalDate;
    return this;
  }

   /**
   * Get fiscalDate
   * @return fiscalDate
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getFiscalDate() {
    return fiscalDate;
  }

  public void setFiscalDate(OffsetDateTime fiscalDate) {
    this.fiscalDate = fiscalDate;
  }

  public CalculatedReceiptSellPayload totalPayment(BigDecimal totalPayment) {
    this.totalPayment = totalPayment;
    return this;
  }

   /**
   * Get totalPayment
   * @return totalPayment
  **/
  @Schema(required = true, description = "")
  public BigDecimal getTotalPayment() {
    return totalPayment;
  }

  public void setTotalPayment(BigDecimal totalPayment) {
    this.totalPayment = totalPayment;
  }

  public CalculatedReceiptSellPayload totalSum(BigDecimal totalSum) {
    this.totalSum = totalSum;
    return this;
  }

   /**
   * Get totalSum
   * @return totalSum
  **/
  @Schema(required = true, description = "")
  public BigDecimal getTotalSum() {
    return totalSum;
  }

  public void setTotalSum(BigDecimal totalSum) {
    this.totalSum = totalSum;
  }

  public CalculatedReceiptSellPayload roundSum(BigDecimal roundSum) {
    this.roundSum = roundSum;
    return this;
  }

   /**
   * Get roundSum
   * @return roundSum
  **/
  @Schema(description = "")
  public BigDecimal getRoundSum() {
    return roundSum;
  }

  public void setRoundSum(BigDecimal roundSum) {
    this.roundSum = roundSum;
  }

  public CalculatedReceiptSellPayload totalRest(BigDecimal totalRest) {
    this.totalRest = totalRest;
    return this;
  }

   /**
   * Get totalRest
   * @return totalRest
  **/
  @Schema(required = true, description = "")
  public BigDecimal getTotalRest() {
    return totalRest;
  }

  public void setTotalRest(BigDecimal totalRest) {
    this.totalRest = totalRest;
  }

  public CalculatedReceiptSellPayload technicalReturn(Boolean technicalReturn) {
    this.technicalReturn = technicalReturn;
    return this;
  }

   /**
   * Get technicalReturn
   * @return technicalReturn
  **/
  @Schema(description = "")
  public Boolean isTechnicalReturn() {
    return technicalReturn;
  }

  public void setTechnicalReturn(Boolean technicalReturn) {
    this.technicalReturn = technicalReturn;
  }

  public CalculatedReceiptSellPayload goods(List<CalculatedGoodItemPayload> goods) {
    this.goods = goods;
    return this;
  }

  public CalculatedReceiptSellPayload addGoodsItem(CalculatedGoodItemPayload goodsItem) {
    this.goods.add(goodsItem);
    return this;
  }

   /**
   * Get goods
   * @return goods
  **/
  @Schema(required = true, description = "")
  public List<CalculatedGoodItemPayload> getGoods() {
    return goods;
  }

  public void setGoods(List<CalculatedGoodItemPayload> goods) {
    this.goods = goods;
  }

  public CalculatedReceiptSellPayload payments(List<AnyOfCalculatedReceiptSellPayloadPaymentsItems> payments) {
    this.payments = payments;
    return this;
  }

  public CalculatedReceiptSellPayload addPaymentsItem(AnyOfCalculatedReceiptSellPayloadPaymentsItems paymentsItem) {
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Get payments
   * @return payments
  **/
  @Schema(required = true, description = "")
  public List<AnyOfCalculatedReceiptSellPayloadPaymentsItems> getPayments() {
    return payments;
  }

  public void setPayments(List<AnyOfCalculatedReceiptSellPayloadPaymentsItems> payments) {
    this.payments = payments;
  }

  public CalculatedReceiptSellPayload isSell(Boolean isSell) {
    this.isSell = isSell;
    return this;
  }

   /**
   * Get isSell
   * @return isSell
  **/
  @Schema(description = "")
  public Boolean isIsSell() {
    return isSell;
  }

  public void setIsSell(Boolean isSell) {
    this.isSell = isSell;
  }

  public CalculatedReceiptSellPayload discounts(List<CalculatedDiscountPayload> discounts) {
    this.discounts = discounts;
    return this;
  }

  public CalculatedReceiptSellPayload addDiscountsItem(CalculatedDiscountPayload discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<CalculatedDiscountPayload>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

   /**
   * Get discounts
   * @return discounts
  **/
  @Schema(description = "")
  public List<CalculatedDiscountPayload> getDiscounts() {
    return discounts;
  }

  public void setDiscounts(List<CalculatedDiscountPayload> discounts) {
    this.discounts = discounts;
  }

  public CalculatedReceiptSellPayload taxes(List<CalculatedReceiptTaxPayload> taxes) {
    this.taxes = taxes;
    return this;
  }

  public CalculatedReceiptSellPayload addTaxesItem(CalculatedReceiptTaxPayload taxesItem) {
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @Schema(required = true, description = "")
  public List<CalculatedReceiptTaxPayload> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<CalculatedReceiptTaxPayload> taxes) {
    this.taxes = taxes;
  }

  public CalculatedReceiptSellPayload delivery(DeliveryPayload delivery) {
    this.delivery = delivery;
    return this;
  }

   /**
   * Get delivery
   * @return delivery
  **/
  @Schema(description = "")
  public DeliveryPayload getDelivery() {
    return delivery;
  }

  public void setDelivery(DeliveryPayload delivery) {
    this.delivery = delivery;
  }

  public CalculatedReceiptSellPayload cashierName(String cashierName) {
    this.cashierName = cashierName;
    return this;
  }

   /**
   * Get cashierName
   * @return cashierName
  **/
  @Schema(description = "")
  public String getCashierName() {
    return cashierName;
  }

  public void setCashierName(String cashierName) {
    this.cashierName = cashierName;
  }

  public CalculatedReceiptSellPayload departament(String departament) {
    this.departament = departament;
    return this;
  }

   /**
   * Get departament
   * @return departament
  **/
  @Schema(description = "")
  public String getDepartament() {
    return departament;
  }

  public void setDepartament(String departament) {
    this.departament = departament;
  }

  public CalculatedReceiptSellPayload header(String header) {
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @Schema(description = "")
  public String getHeader() {
    return header;
  }

  public void setHeader(String header) {
    this.header = header;
  }

  public CalculatedReceiptSellPayload footer(String footer) {
    this.footer = footer;
    return this;
  }

   /**
   * Get footer
   * @return footer
  **/
  @Schema(description = "")
  public String getFooter() {
    return footer;
  }

  public void setFooter(String footer) {
    this.footer = footer;
  }

  public CalculatedReceiptSellPayload barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

   /**
   * Get barcode
   * @return barcode
  **/
  @Schema(description = "")
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }

  public CalculatedReceiptSellPayload context(Map<String, Object> context) {
    this.context = context;
    return this;
  }

  public CalculatedReceiptSellPayload putContextItem(String key, Object contextItem) {
    if (this.context == null) {
      this.context = new HashMap<String, Object>();
    }
    this.context.put(key, contextItem);
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @Schema(description = "")
  public Map<String, Object> getContext() {
    return context;
  }

  public void setContext(Map<String, Object> context) {
    this.context = context;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculatedReceiptSellPayload calculatedReceiptSellPayload = (CalculatedReceiptSellPayload) o;
    return Objects.equals(this.id, calculatedReceiptSellPayload.id) &&
        Objects.equals(this.fiscalCode, calculatedReceiptSellPayload.fiscalCode) &&
        Objects.equals(this.fiscalDate, calculatedReceiptSellPayload.fiscalDate) &&
        Objects.equals(this.totalPayment, calculatedReceiptSellPayload.totalPayment) &&
        Objects.equals(this.totalSum, calculatedReceiptSellPayload.totalSum) &&
        Objects.equals(this.roundSum, calculatedReceiptSellPayload.roundSum) &&
        Objects.equals(this.totalRest, calculatedReceiptSellPayload.totalRest) &&
        Objects.equals(this.technicalReturn, calculatedReceiptSellPayload.technicalReturn) &&
        Objects.equals(this.goods, calculatedReceiptSellPayload.goods) &&
        Objects.equals(this.payments, calculatedReceiptSellPayload.payments) &&
        Objects.equals(this.isSell, calculatedReceiptSellPayload.isSell) &&
        Objects.equals(this.discounts, calculatedReceiptSellPayload.discounts) &&
        Objects.equals(this.taxes, calculatedReceiptSellPayload.taxes) &&
        Objects.equals(this.delivery, calculatedReceiptSellPayload.delivery) &&
        Objects.equals(this.cashierName, calculatedReceiptSellPayload.cashierName) &&
        Objects.equals(this.departament, calculatedReceiptSellPayload.departament) &&
        Objects.equals(this.header, calculatedReceiptSellPayload.header) &&
        Objects.equals(this.footer, calculatedReceiptSellPayload.footer) &&
        Objects.equals(this.barcode, calculatedReceiptSellPayload.barcode) &&
        Objects.equals(this.context, calculatedReceiptSellPayload.context);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fiscalCode, fiscalDate, totalPayment, totalSum, roundSum, totalRest, technicalReturn, goods, payments, isSell, discounts, taxes, delivery, cashierName, departament, header, footer, barcode, context);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculatedReceiptSellPayload {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fiscalCode: ").append(toIndentedString(fiscalCode)).append("\n");
    sb.append("    fiscalDate: ").append(toIndentedString(fiscalDate)).append("\n");
    sb.append("    totalPayment: ").append(toIndentedString(totalPayment)).append("\n");
    sb.append("    totalSum: ").append(toIndentedString(totalSum)).append("\n");
    sb.append("    roundSum: ").append(toIndentedString(roundSum)).append("\n");
    sb.append("    totalRest: ").append(toIndentedString(totalRest)).append("\n");
    sb.append("    technicalReturn: ").append(toIndentedString(technicalReturn)).append("\n");
    sb.append("    goods: ").append(toIndentedString(goods)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    isSell: ").append(toIndentedString(isSell)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("    cashierName: ").append(toIndentedString(cashierName)).append("\n");
    sb.append("    departament: ").append(toIndentedString(departament)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
