/*
 * test checkbox API
 * Core API of Software Registrar of Settlement Operations
 *
 * OpenAPI spec version: 0.1.26
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ua.checkbox.j8client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
import ua.checkbox.j8client.model.CurrencyExchangeSchema;
import ua.checkbox.j8client.model.DiscountModel;
import ua.checkbox.j8client.model.GoodItemModel;
import ua.checkbox.j8client.model.GoodTax;
import ua.checkbox.j8client.model.ReceiptStatus;
import ua.checkbox.j8client.model.ReceiptType;
import ua.checkbox.j8client.model.ShortTransaction;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
// import org.threeten.bp.OffsetDateTime;
/**
 * ShortReceiptModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-02T14:34:29.121+02:00[Europe/Kiev]")
public class ShortReceiptModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("type")
  private ReceiptType type = null;

  @SerializedName("transaction")
  private ShortTransaction transaction = null;

  @SerializedName("serial")
  private Integer serial = null;

  @SerializedName("status")
  private ReceiptStatus status = null;

  @SerializedName("goods")
  private List<GoodItemModel> goods = new ArrayList<GoodItemModel>();

  @SerializedName("payments")
  private List<AnyOfShortReceiptModelPaymentsItems> payments = new ArrayList<AnyOfShortReceiptModelPaymentsItems>();

  @SerializedName("total_sum")
  private Integer totalSum = null;

  @SerializedName("total_payment")
  private Integer totalPayment = null;

  @SerializedName("total_rest")
  private Integer totalRest = null;

  @SerializedName("fiscal_code")
  private String fiscalCode = null;

  @SerializedName("fiscal_date")
  private OffsetDateTime fiscalDate = null;

  @SerializedName("delivered_at")
  private OffsetDateTime deliveredAt = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("taxes")
  private List<GoodTax> taxes = new ArrayList<GoodTax>();

  @SerializedName("discounts")
  private List<DiscountModel> discounts = null;

  @SerializedName("header")
  private String header = null;

  @SerializedName("footer")
  private String footer = null;

  @SerializedName("barcode")
  private String barcode = null;

  @SerializedName("is_created_offline")
  private Boolean isCreatedOffline = false;

  @SerializedName("is_sent_dps")
  private Boolean isSentDps = false;

  @SerializedName("sent_dps_at")
  private OffsetDateTime sentDpsAt = null;

  @SerializedName("tax_url")
  private String taxUrl = null;

  @SerializedName("related_receipt_id")
  private UUID relatedReceiptId = null;

  @SerializedName("technical_return")
  private Boolean technicalReturn = false;

  @SerializedName("currency_exchange")
  private CurrencyExchangeSchema currencyExchange = null;

  public ShortReceiptModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ShortReceiptModel type(ReceiptType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public ReceiptType getType() {
    return type;
  }

  public void setType(ReceiptType type) {
    this.type = type;
  }

  public ShortReceiptModel transaction(ShortTransaction transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @Schema(description = "")
  public ShortTransaction getTransaction() {
    return transaction;
  }

  public void setTransaction(ShortTransaction transaction) {
    this.transaction = transaction;
  }

  public ShortReceiptModel serial(Integer serial) {
    this.serial = serial;
    return this;
  }

   /**
   * Get serial
   * @return serial
  **/
  @Schema(required = true, description = "")
  public Integer getSerial() {
    return serial;
  }

  public void setSerial(Integer serial) {
    this.serial = serial;
  }

  public ShortReceiptModel status(ReceiptStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public ReceiptStatus getStatus() {
    return status;
  }

  public void setStatus(ReceiptStatus status) {
    this.status = status;
  }

  public ShortReceiptModel goods(List<GoodItemModel> goods) {
    this.goods = goods;
    return this;
  }

  public ShortReceiptModel addGoodsItem(GoodItemModel goodsItem) {
    this.goods.add(goodsItem);
    return this;
  }

   /**
   * Get goods
   * @return goods
  **/
  @Schema(required = true, description = "")
  public List<GoodItemModel> getGoods() {
    return goods;
  }

  public void setGoods(List<GoodItemModel> goods) {
    this.goods = goods;
  }

  public ShortReceiptModel payments(List<AnyOfShortReceiptModelPaymentsItems> payments) {
    this.payments = payments;
    return this;
  }

  public ShortReceiptModel addPaymentsItem(AnyOfShortReceiptModelPaymentsItems paymentsItem) {
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Get payments
   * @return payments
  **/
  @Schema(required = true, description = "")
  public List<AnyOfShortReceiptModelPaymentsItems> getPayments() {
    return payments;
  }

  public void setPayments(List<AnyOfShortReceiptModelPaymentsItems> payments) {
    this.payments = payments;
  }

  public ShortReceiptModel totalSum(Integer totalSum) {
    this.totalSum = totalSum;
    return this;
  }

   /**
   * Застаріле поле, використовуйте &#x27;total_sum&#x27;
   * @return totalSum
  **/
  @Schema(required = true, description = "Застаріле поле, використовуйте 'total_sum'")
  public Integer getTotalSum() {
    return totalSum;
  }

  public void setTotalSum(Integer totalSum) {
    this.totalSum = totalSum;
  }

  public ShortReceiptModel totalPayment(Integer totalPayment) {
    this.totalPayment = totalPayment;
    return this;
  }

   /**
   * Get totalPayment
   * @return totalPayment
  **/
  @Schema(required = true, description = "")
  public Integer getTotalPayment() {
    return totalPayment;
  }

  public void setTotalPayment(Integer totalPayment) {
    this.totalPayment = totalPayment;
  }

  public ShortReceiptModel totalRest(Integer totalRest) {
    this.totalRest = totalRest;
    return this;
  }

   /**
   * Застаріле поле, використовуйте &#x27;total_rest&#x27;
   * @return totalRest
  **/
  @Schema(required = true, description = "Застаріле поле, використовуйте 'total_rest'")
  public Integer getTotalRest() {
    return totalRest;
  }

  public void setTotalRest(Integer totalRest) {
    this.totalRest = totalRest;
  }

  public ShortReceiptModel fiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
    return this;
  }

   /**
   * Get fiscalCode
   * @return fiscalCode
  **/
  @Schema(description = "")
  public String getFiscalCode() {
    return fiscalCode;
  }

  public void setFiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
  }

  public ShortReceiptModel fiscalDate(OffsetDateTime fiscalDate) {
    this.fiscalDate = fiscalDate;
    return this;
  }

   /**
   * Get fiscalDate
   * @return fiscalDate
  **/
  @Schema(description = "")
  public OffsetDateTime getFiscalDate() {
    return fiscalDate;
  }

  public void setFiscalDate(OffsetDateTime fiscalDate) {
    this.fiscalDate = fiscalDate;
  }

  public ShortReceiptModel deliveredAt(OffsetDateTime deliveredAt) {
    this.deliveredAt = deliveredAt;
    return this;
  }

   /**
   * Get deliveredAt
   * @return deliveredAt
  **/
  @Schema(description = "")
  public OffsetDateTime getDeliveredAt() {
    return deliveredAt;
  }

  public void setDeliveredAt(OffsetDateTime deliveredAt) {
    this.deliveredAt = deliveredAt;
  }

  public ShortReceiptModel createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ShortReceiptModel updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ShortReceiptModel taxes(List<GoodTax> taxes) {
    this.taxes = taxes;
    return this;
  }

  public ShortReceiptModel addTaxesItem(GoodTax taxesItem) {
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @Schema(required = true, description = "")
  public List<GoodTax> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<GoodTax> taxes) {
    this.taxes = taxes;
  }

  public ShortReceiptModel discounts(List<DiscountModel> discounts) {
    this.discounts = discounts;
    return this;
  }

  public ShortReceiptModel addDiscountsItem(DiscountModel discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<DiscountModel>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

   /**
   * Get discounts
   * @return discounts
  **/
  @Schema(description = "")
  public List<DiscountModel> getDiscounts() {
    return discounts;
  }

  public void setDiscounts(List<DiscountModel> discounts) {
    this.discounts = discounts;
  }

  public ShortReceiptModel header(String header) {
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @Schema(description = "")
  public String getHeader() {
    return header;
  }

  public void setHeader(String header) {
    this.header = header;
  }

  public ShortReceiptModel footer(String footer) {
    this.footer = footer;
    return this;
  }

   /**
   * Get footer
   * @return footer
  **/
  @Schema(description = "")
  public String getFooter() {
    return footer;
  }

  public void setFooter(String footer) {
    this.footer = footer;
  }

  public ShortReceiptModel barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

   /**
   * Get barcode
   * @return barcode
  **/
  @Schema(description = "")
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }

  public ShortReceiptModel isCreatedOffline(Boolean isCreatedOffline) {
    this.isCreatedOffline = isCreatedOffline;
    return this;
  }

   /**
   * Get isCreatedOffline
   * @return isCreatedOffline
  **/
  @Schema(description = "")
  public Boolean isIsCreatedOffline() {
    return isCreatedOffline;
  }

  public void setIsCreatedOffline(Boolean isCreatedOffline) {
    this.isCreatedOffline = isCreatedOffline;
  }

  public ShortReceiptModel isSentDps(Boolean isSentDps) {
    this.isSentDps = isSentDps;
    return this;
  }

   /**
   * Get isSentDps
   * @return isSentDps
  **/
  @Schema(description = "")
  public Boolean isIsSentDps() {
    return isSentDps;
  }

  public void setIsSentDps(Boolean isSentDps) {
    this.isSentDps = isSentDps;
  }

  public ShortReceiptModel sentDpsAt(OffsetDateTime sentDpsAt) {
    this.sentDpsAt = sentDpsAt;
    return this;
  }

   /**
   * Get sentDpsAt
   * @return sentDpsAt
  **/
  @Schema(description = "")
  public OffsetDateTime getSentDpsAt() {
    return sentDpsAt;
  }

  public void setSentDpsAt(OffsetDateTime sentDpsAt) {
    this.sentDpsAt = sentDpsAt;
  }

  public ShortReceiptModel taxUrl(String taxUrl) {
    this.taxUrl = taxUrl;
    return this;
  }

   /**
   * Get taxUrl
   * @return taxUrl
  **/
  @Schema(description = "")
  public String getTaxUrl() {
    return taxUrl;
  }

  public void setTaxUrl(String taxUrl) {
    this.taxUrl = taxUrl;
  }

  public ShortReceiptModel relatedReceiptId(UUID relatedReceiptId) {
    this.relatedReceiptId = relatedReceiptId;
    return this;
  }

   /**
   * Get relatedReceiptId
   * @return relatedReceiptId
  **/
  @Schema(description = "")
  public UUID getRelatedReceiptId() {
    return relatedReceiptId;
  }

  public void setRelatedReceiptId(UUID relatedReceiptId) {
    this.relatedReceiptId = relatedReceiptId;
  }

  public ShortReceiptModel technicalReturn(Boolean technicalReturn) {
    this.technicalReturn = technicalReturn;
    return this;
  }

   /**
   * Get technicalReturn
   * @return technicalReturn
  **/
  @Schema(description = "")
  public Boolean isTechnicalReturn() {
    return technicalReturn;
  }

  public void setTechnicalReturn(Boolean technicalReturn) {
    this.technicalReturn = technicalReturn;
  }

  public ShortReceiptModel currencyExchange(CurrencyExchangeSchema currencyExchange) {
    this.currencyExchange = currencyExchange;
    return this;
  }

   /**
   * Get currencyExchange
   * @return currencyExchange
  **/
  @Schema(description = "")
  public CurrencyExchangeSchema getCurrencyExchange() {
    return currencyExchange;
  }

  public void setCurrencyExchange(CurrencyExchangeSchema currencyExchange) {
    this.currencyExchange = currencyExchange;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShortReceiptModel shortReceiptModel = (ShortReceiptModel) o;
    return Objects.equals(this.id, shortReceiptModel.id) &&
        Objects.equals(this.type, shortReceiptModel.type) &&
        Objects.equals(this.transaction, shortReceiptModel.transaction) &&
        Objects.equals(this.serial, shortReceiptModel.serial) &&
        Objects.equals(this.status, shortReceiptModel.status) &&
        Objects.equals(this.goods, shortReceiptModel.goods) &&
        Objects.equals(this.payments, shortReceiptModel.payments) &&
        Objects.equals(this.totalSum, shortReceiptModel.totalSum) &&
        Objects.equals(this.totalPayment, shortReceiptModel.totalPayment) &&
        Objects.equals(this.totalRest, shortReceiptModel.totalRest) &&
        Objects.equals(this.fiscalCode, shortReceiptModel.fiscalCode) &&
        Objects.equals(this.fiscalDate, shortReceiptModel.fiscalDate) &&
        Objects.equals(this.deliveredAt, shortReceiptModel.deliveredAt) &&
        Objects.equals(this.createdAt, shortReceiptModel.createdAt) &&
        Objects.equals(this.updatedAt, shortReceiptModel.updatedAt) &&
        Objects.equals(this.taxes, shortReceiptModel.taxes) &&
        Objects.equals(this.discounts, shortReceiptModel.discounts) &&
        Objects.equals(this.header, shortReceiptModel.header) &&
        Objects.equals(this.footer, shortReceiptModel.footer) &&
        Objects.equals(this.barcode, shortReceiptModel.barcode) &&
        Objects.equals(this.isCreatedOffline, shortReceiptModel.isCreatedOffline) &&
        Objects.equals(this.isSentDps, shortReceiptModel.isSentDps) &&
        Objects.equals(this.sentDpsAt, shortReceiptModel.sentDpsAt) &&
        Objects.equals(this.taxUrl, shortReceiptModel.taxUrl) &&
        Objects.equals(this.relatedReceiptId, shortReceiptModel.relatedReceiptId) &&
        Objects.equals(this.technicalReturn, shortReceiptModel.technicalReturn) &&
        Objects.equals(this.currencyExchange, shortReceiptModel.currencyExchange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, transaction, serial, status, goods, payments, totalSum, totalPayment, totalRest, fiscalCode, fiscalDate, deliveredAt, createdAt, updatedAt, taxes, discounts, header, footer, barcode, isCreatedOffline, isSentDps, sentDpsAt, taxUrl, relatedReceiptId, technicalReturn, currencyExchange);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShortReceiptModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    goods: ").append(toIndentedString(goods)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    totalSum: ").append(toIndentedString(totalSum)).append("\n");
    sb.append("    totalPayment: ").append(toIndentedString(totalPayment)).append("\n");
    sb.append("    totalRest: ").append(toIndentedString(totalRest)).append("\n");
    sb.append("    fiscalCode: ").append(toIndentedString(fiscalCode)).append("\n");
    sb.append("    fiscalDate: ").append(toIndentedString(fiscalDate)).append("\n");
    sb.append("    deliveredAt: ").append(toIndentedString(deliveredAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    isCreatedOffline: ").append(toIndentedString(isCreatedOffline)).append("\n");
    sb.append("    isSentDps: ").append(toIndentedString(isSentDps)).append("\n");
    sb.append("    sentDpsAt: ").append(toIndentedString(sentDpsAt)).append("\n");
    sb.append("    taxUrl: ").append(toIndentedString(taxUrl)).append("\n");
    sb.append("    relatedReceiptId: ").append(toIndentedString(relatedReceiptId)).append("\n");
    sb.append("    technicalReturn: ").append(toIndentedString(technicalReturn)).append("\n");
    sb.append("    currencyExchange: ").append(toIndentedString(currencyExchange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
